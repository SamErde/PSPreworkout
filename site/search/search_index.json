{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#powershell-preworkout-pspreworkout","title":"PowerShell Preworkout (PSPreworkout)","text":"<p>A special mix of tools to help jump start your PowerShell session!</p> <p> </p> <p> </p> <p> </p>"},{"location":"#inspiration","title":"Inspiration","text":"<p>Why PSPreworkout? Whether you are developing PowerShell code or performing daily tasks, the goal of PSPreworkout is to start working efficiently as quickly as possible. The idea for the name was inspired by the pre-workout mix that I sometimes drink for an extra kick of energy and focus before working out.</p> <p>The PSPreworkout module contains shortcuts for setting up a PowerShell environment, configuring Git, customizing the shell, working with environment variables, creating new script files from a template, updating packages, and more!</p>"},{"location":"#getting-started","title":"Getting Started","text":"<pre><code>Install-Module -Name PSPreworkout -Scope CurrentUser\nGet-Command -Module PSPreworkout\n</code></pre>"},{"location":"#contributing","title":"Contributing","text":"<p>Please feel free submit an issue or a PR to report bugs, suggest improvements, or add new ideas to the module!</p>"},{"location":"#presentations","title":"Presentations","text":"<ul> <li>PSPreworkout Module Walkthrough at the PowerShell Usergroup Inn-Salzach - Thanks to the Inn-Salzach PowerShell User Group for inviting me to share my first public presentation!</li> </ul>"},{"location":"#pspreworkout-cmdlets","title":"PSPreworkout Cmdlets","text":"\u2935\ufe0f Full List:  ## PSPreworkout Cmdlets ### [Edit-PSReadLineHistoryFile](Edit-PSReadLineHistoryFile.md) Edit the PSReadLine History File  ### [Edit-WingetSettingsFile](Edit-WingetSettingsFile.md) Edit the WinGet settings file.  ### [Get-EnvironmentVariable](Get-EnvironmentVariable.md) Retrieves the value of an environment variable.  ### [Get-LoadedAssembly](Get-LoadedAssembly.md) Get all assemblies loaded in PowerShell.  ### [Get-PowerShellPortable](Get-PowerShellPortable.md) Download a portable version of PowerShell to run anywhere on demand.  ### [Get-TypeAccelerator](Get-TypeAccelerator.md) Get available type accelerators.  ### [Initialize-PSEnvironmentConfiguration](Initialize-PSEnvironmentConfiguration.md) Initialize configuration your PowerShell environment and git.  ### [Install-CommandNotFoundUtility](Install-CommandNotFoundUtility.md) Install and setup the WinGetCommandNotFound utility from Microsoft PowerToys.  ### [Install-OhMyPosh](Install-OhMyPosh.md) Install Oh My Posh and add it to your profile.  ### [Install-PowerShellISE](Install-PowerShellISE.md) Install the Windows PowerShell ISE  ### [Install-WinGet](Install-WinGet.md) Install Winget (beta)  ### [New-Credential](New-Credential.md) Create a new secure credential.  ### [New-ScriptFromTemplate](New-ScriptFromTemplate.md) Create a new advanced function from a template.  ### [Out-JsonFile](Out-JsonFile.md) Convert an object to JSON and write it to a file.  ### [Set-ConsoleFont](Set-ConsoleFont.md) Set the font for your consoles.  ### [Set-DefaultTerminal](Set-DefaultTerminal.md) Configure the default terminal for Windows  ### [Set-EnvironmentVariable](Set-EnvironmentVariable.md) Set environment variables.  ### [Show-LoadedAssembly](Show-LoadedAssembly.md) Show all assemblies loaded in PowerShell.  ### [Show-WithoutEmptyProperty](Show-WithoutEmptyProperty.md) Show an object without its empty properties.  ### [Test-IsElevated](Test-IsElevated.md) Check if you are running an elevated shell with administrator or root privileges.  ### [Update-AllTheThings](Update-AllTheThings.md) Update all the things!"},{"location":"Edit-PSReadLineHistoryFile/","title":"Edit-PSReadLineHistoryFile","text":""},{"location":"Edit-PSReadLineHistoryFile/#synopsis","title":"SYNOPSIS","text":"<p>Edit the PSReadLine History File</p>"},{"location":"Edit-PSReadLineHistoryFile/#syntax","title":"SYNTAX","text":"<pre><code>Edit-PSReadLineHistoryFile [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Edit-PSReadLineHistoryFile/#description","title":"DESCRIPTION","text":"<p>Use this function to edit the PSReadLine history file. This may be useful if you want to reset some of your autocomplete suggestions or remove commands that did not work.</p>"},{"location":"Edit-PSReadLineHistoryFile/#examples","title":"EXAMPLES","text":""},{"location":"Edit-PSReadLineHistoryFile/#example-1","title":"EXAMPLE 1","text":"<pre><code>Edit-PSReadLineHistoryFile\n</code></pre>"},{"location":"Edit-PSReadLineHistoryFile/#parameters","title":"PARAMETERS","text":""},{"location":"Edit-PSReadLineHistoryFile/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"Edit-PSReadLineHistoryFile/#inputs","title":"INPUTS","text":""},{"location":"Edit-PSReadLineHistoryFile/#outputs","title":"OUTPUTS","text":""},{"location":"Edit-PSReadLineHistoryFile/#notes","title":"NOTES","text":"<p>Author: Sam Erde Version: 0.0.2 Modified: 2025-01-06</p> <p>Idea: History search with a TUI? This may already be done by the PowerShell Run module.</p>"},{"location":"Edit-PSReadLineHistoryFile/#related-links","title":"RELATED LINKS","text":""},{"location":"Edit-WingetSettingsFile/","title":"Edit-WingetSettingsFile","text":""},{"location":"Edit-WingetSettingsFile/#synopsis","title":"SYNOPSIS","text":"<p>Edit the WinGet settings file.</p>"},{"location":"Edit-WingetSettingsFile/#syntax","title":"SYNTAX","text":"<pre><code>Edit-WingetSettingsFile [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Edit-WingetSettingsFile/#description","title":"DESCRIPTION","text":"<p>A shortcut to edit the WinGet settings file. This will create one if it does not already exist.</p>"},{"location":"Edit-WingetSettingsFile/#examples","title":"EXAMPLES","text":""},{"location":"Edit-WingetSettingsFile/#example-1","title":"EXAMPLE 1","text":"<pre><code>Edit-WinGetSettingsFile\n</code></pre>"},{"location":"Edit-WingetSettingsFile/#parameters","title":"PARAMETERS","text":""},{"location":"Edit-WingetSettingsFile/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"Edit-WingetSettingsFile/#inputs","title":"INPUTS","text":""},{"location":"Edit-WingetSettingsFile/#outputs","title":"OUTPUTS","text":""},{"location":"Edit-WingetSettingsFile/#notes","title":"NOTES","text":"<p>Author: Sam Erde Version: 0.1.0 Modified: 2024/10/12</p>"},{"location":"Edit-WingetSettingsFile/#related-links","title":"RELATED LINKS","text":""},{"location":"Get-EnvironmentVariable/","title":"Get-EnvironmentVariable","text":""},{"location":"Get-EnvironmentVariable/#synopsis","title":"SYNOPSIS","text":"<p>Retrieves the value of an environment variable.</p>"},{"location":"Get-EnvironmentVariable/#syntax","title":"SYNTAX","text":"<pre><code>Get-EnvironmentVariable [[-Name] &lt;String&gt;] [-Pattern &lt;String&gt;] [-Target &lt;EnvironmentVariableTarget[]&gt;] [-All]\n [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Get-EnvironmentVariable/#description","title":"DESCRIPTION","text":"<p>The Get-EnvironmentVariable function retrieves the value of the specified environment variable or displays all environment variables.</p>"},{"location":"Get-EnvironmentVariable/#examples","title":"EXAMPLES","text":""},{"location":"Get-EnvironmentVariable/#example-1","title":"EXAMPLE 1","text":"<pre><code>Get-EnvironmentVariable -Name 'UserName'\nRetrieves the value of the \"UserName\" environment variable from the process target.\n</code></pre>"},{"location":"Get-EnvironmentVariable/#example-2","title":"EXAMPLE 2","text":"<pre><code>Get-EnvironmentVariable -Name 'Path' -Target 'Machine'\nRetrieves the value of the PATH environment variable from the machine target.\n</code></pre>"},{"location":"Get-EnvironmentVariable/#example-3","title":"EXAMPLE 3","text":"<pre><code>Get-EnvironmentVariable -Pattern '^u'\nGet environment variables with names that begin with the letter \"u\" in any target.\n</code></pre>"},{"location":"Get-EnvironmentVariable/#example-4","title":"EXAMPLE 4","text":"<pre><code>Get-EnvironmentVariable -Pattern 'git' | Format-Table Name,Target,PID,ProcessName,Value\n</code></pre> <p>Get all process environment variables that match the pattern \"git\" and return the results as a table.</p>"},{"location":"Get-EnvironmentVariable/#example-5","title":"EXAMPLE 5","text":"<pre><code>Get-EnvironmentVariable -Pattern 'path' -Target Machine,Process,User | Format-Table Name,Target,PID,ProcessName,Value\n</code></pre> <p>Return all environment variables that match the pattern \"path\" from all targets and format the results as a table.</p>"},{"location":"Get-EnvironmentVariable/#parameters","title":"PARAMETERS","text":""},{"location":"Get-EnvironmentVariable/#-name","title":"-Name","text":"<p>The name of the environment variable to retrieve.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Get-EnvironmentVariable/#-pattern","title":"-Pattern","text":"<p>A regex pattern to match environment variable names against.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Get-EnvironmentVariable/#-target","title":"-Target","text":"<p>The target (Process, Machine, User) to pull environment variables from. The default is process. Multiple targets may be specified.</p> <pre><code>Type: EnvironmentVariableTarget[]\nParameter Sets: (All)\nAliases:\nAccepted values: Process, User, Machine\n\nRequired: False\nPosition: Named\nDefault value: [System.EnvironmentVariableTarget].GetEnumValues()\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Get-EnvironmentVariable/#-all","title":"-All","text":"<p>Optionally get all environment variables from all targets. Process ID and process name will be included for process environment variables.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Get-EnvironmentVariable/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"Get-EnvironmentVariable/#inputs","title":"INPUTS","text":""},{"location":"Get-EnvironmentVariable/#outputs","title":"OUTPUTS","text":""},{"location":"Get-EnvironmentVariable/#systemobject","title":"System.Object[]","text":""},{"location":"Get-EnvironmentVariable/#notes","title":"NOTES","text":"<p>Author: Sam Erde Version: 0.2.0 Modified: 2025/03/05</p> <p>To Do: Return environment variables if -Target is used without either -Name or -Pattern. To Do: Do not allow name and pattern parameters to be used together.</p> <p>About Environment Variables:</p> <p>Variable names are case-sensitive on Linux and macOS, but not on Windows.</p> <p>Why is 'Target' used by .NET instead of the familiar 'Scope' parameter name? @IISResetMe (Mathias R. Jessen) explains: \"Scope\" would imply some sort of integrated hierarchy of env variables - that's not really the case. Target=Process translates to kernel32!GetEnvironmentVariable (which then in turn reads the PEB from the calling process), whereas Target={User,Machine} causes a registry lookup against environment data in either HKCU or HKLM.</p> <p>The relevant sources for the User and Machine targets are in the registry at: - HKEY_CURRENT_USER\\Environment - HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment</p> <p>See more at \\&lt;https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_environment_variables&gt;.</p>"},{"location":"Get-EnvironmentVariable/#related-links","title":"RELATED LINKS","text":""},{"location":"Get-LoadedAssembly/","title":"Get-LoadedAssembly","text":""},{"location":"Get-LoadedAssembly/#synopsis","title":"SYNOPSIS","text":"<p>Get all assemblies loaded in PowerShell.</p>"},{"location":"Get-LoadedAssembly/#syntax","title":"SYNTAX","text":"<pre><code>Get-LoadedAssembly [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Get-LoadedAssembly/#description","title":"DESCRIPTION","text":"<p>Get all assemblies loaded in PowerShell.</p>"},{"location":"Get-LoadedAssembly/#examples","title":"EXAMPLES","text":""},{"location":"Get-LoadedAssembly/#example-1","title":"EXAMPLE 1","text":"<pre><code>Get-LoadedAssembly\n</code></pre> <p>Returns a list of all loaded assemblies.</p>"},{"location":"Get-LoadedAssembly/#parameters","title":"PARAMETERS","text":""},{"location":"Get-LoadedAssembly/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"Get-LoadedAssembly/#inputs","title":"INPUTS","text":""},{"location":"Get-LoadedAssembly/#outputs","title":"OUTPUTS","text":""},{"location":"Get-LoadedAssembly/#object","title":"Object[]","text":""},{"location":"Get-LoadedAssembly/#notes","title":"NOTES","text":"<p>To Do: Add -Name parameter to get a specific one.</p> <p>Author: Sam Erde Version: 0.0.2 Modified: 2024/10/12</p>"},{"location":"Get-LoadedAssembly/#related-links","title":"RELATED LINKS","text":""},{"location":"Get-PowerShellPortable/","title":"Get-PowerShellPortable","text":""},{"location":"Get-PowerShellPortable/#synopsis","title":"SYNOPSIS","text":"<p>Download a portable version of PowerShell to run anywhere on demand.</p>"},{"location":"Get-PowerShellPortable/#syntax","title":"SYNTAX","text":"<pre><code>Get-PowerShellPortable [[-Path] &lt;String&gt;] [-Extract] [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Get-PowerShellPortable/#description","title":"DESCRIPTION","text":"<p>This function helps you download a zipped version of PowerShell 7.x that can be run anywhere without needing to install it.</p>"},{"location":"Get-PowerShellPortable/#examples","title":"EXAMPLES","text":""},{"location":"Get-PowerShellPortable/#example-1","title":"EXAMPLE 1","text":"<pre><code>Get-PowerShellPortable -Path $HOME -Extract\n</code></pre> <p>Download the latest ZIP/TAR of PowerShell to your $HOME folder. It will be extracted into a folder that matches the filename of the compressed archive.</p>"},{"location":"Get-PowerShellPortable/#parameters","title":"PARAMETERS","text":""},{"location":"Get-PowerShellPortable/#-path","title":"-Path","text":"<p>The path (directory) to download the PowerShell zip or tar.gz file into. Do not include a filename for the download.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Get-PowerShellPortable/#-extract","title":"-Extract","text":"<p>Extract the downloaded file.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Get-PowerShellPortable/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"Get-PowerShellPortable/#inputs","title":"INPUTS","text":""},{"location":"Get-PowerShellPortable/#outputs","title":"OUTPUTS","text":""},{"location":"Get-PowerShellPortable/#notes","title":"NOTES","text":"<p>Author: Sam Erde Version: 0.1.0 Modified: 2024/10/12</p>"},{"location":"Get-PowerShellPortable/#related-links","title":"RELATED LINKS","text":""},{"location":"Get-TypeAccelerator/","title":"Get-TypeAccelerator","text":""},{"location":"Get-TypeAccelerator/#synopsis","title":"SYNOPSIS","text":"<p>Get available type accelerators.</p>"},{"location":"Get-TypeAccelerator/#syntax","title":"SYNTAX","text":"<pre><code>Get-TypeAccelerator [[-Name] &lt;String&gt;] [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Get-TypeAccelerator/#description","title":"DESCRIPTION","text":"<p>Get available type accelerators. These can be useful when trying to find or remember the different type accelerators that are available to use in PowerShell.</p>"},{"location":"Get-TypeAccelerator/#examples","title":"EXAMPLES","text":""},{"location":"Get-TypeAccelerator/#example-1","title":"EXAMPLE 1","text":"<pre><code>Get-TypeAccelerator -Name ADSI\n</code></pre>"},{"location":"Get-TypeAccelerator/#example-2","title":"EXAMPLE 2","text":"<pre><code>Get-TypeAccelerator -Name ps*\n</code></pre> <p>Get all type accelerators that begin with the string \"ps\".</p>"},{"location":"Get-TypeAccelerator/#parameters","title":"PARAMETERS","text":""},{"location":"Get-TypeAccelerator/#-name","title":"-Name","text":"<p>The name of a specific type accelerator to get.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 1\nDefault value: *\nAccept pipeline input: False\nAccept wildcard characters: True\n</code></pre>"},{"location":"Get-TypeAccelerator/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"Get-TypeAccelerator/#inputs","title":"INPUTS","text":""},{"location":"Get-TypeAccelerator/#outputs","title":"OUTPUTS","text":""},{"location":"Get-TypeAccelerator/#object","title":"Object[]","text":""},{"location":"Get-TypeAccelerator/#notes","title":"NOTES","text":"<p>Author: Sam Erde Version: 0.0.3 Modified: 2024/10/29</p> <p>Thanks to Jeff Hicks (@JDHITSolutions) for helpful suggestions and improvements on this output!</p>"},{"location":"Get-TypeAccelerator/#related-links","title":"RELATED LINKS","text":""},{"location":"Initialize-PSEnvironmentConfiguration/","title":"Initialize-PSEnvironmentConfiguration","text":""},{"location":"Initialize-PSEnvironmentConfiguration/#synopsis","title":"SYNOPSIS","text":"<p>Initialize configuration your PowerShell environment and git.</p>"},{"location":"Initialize-PSEnvironmentConfiguration/#syntax","title":"SYNTAX","text":"<pre><code>Initialize-PSEnvironmentConfiguration [[-Name] &lt;String&gt;] [[-Email] &lt;String&gt;] [[-Font] &lt;String&gt;]\n [[-Packages] &lt;String[]&gt;] [-SkipPackages] [[-Modules] &lt;String[]&gt;] [-SkipModules]\n [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Initialize-PSEnvironmentConfiguration/#description","title":"DESCRIPTION","text":"<p>Install supporting packages, configure git, and set your console font with this function.</p>"},{"location":"Initialize-PSEnvironmentConfiguration/#examples","title":"EXAMPLES","text":""},{"location":"Initialize-PSEnvironmentConfiguration/#example-1","title":"EXAMPLE 1","text":"<pre><code>Initialize the PowerShell working environment with a custom font, and set my name and email address for Git commits.\n</code></pre> <p>Initialize-PSEnvironmentConfiguration -Name 'Sam Erde' -Email 'sam@example.local' -ConsoleFont 'FiraCode Nerd Font'</p>"},{"location":"Initialize-PSEnvironmentConfiguration/#parameters","title":"PARAMETERS","text":""},{"location":"Initialize-PSEnvironmentConfiguration/#-name","title":"-Name","text":"<p>Your name to be used for git commits.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Initialize-PSEnvironmentConfiguration/#-email","title":"-Email","text":"<p>Your email to be used for git commits.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 2\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Initialize-PSEnvironmentConfiguration/#-font","title":"-Font","text":"<p>The font to use for your consoles (PowerShell, Windows PowerShell, git bash, etc.)</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 3\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Initialize-PSEnvironmentConfiguration/#-packages","title":"-Packages","text":"<p>Packages to install with winget.</p> <pre><code>Type: String[]\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 4\nDefault value: @('Microsoft.WindowsTerminal', 'git.git', 'JanDeDobbeleer.OhMyPosh')\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Initialize-PSEnvironmentConfiguration/#-skippackages","title":"-SkipPackages","text":"<p>Option to skip installation of default packages.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Initialize-PSEnvironmentConfiguration/#-modules","title":"-Modules","text":"<p>PowerShell modules to install.</p> <pre><code>Type: String[]\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 5\nDefault value: @('CompletionPredictor', 'Microsoft.PowerShell.ConsoleGuiTools', 'Microsoft.PowerShell.PSResourceGet', 'posh-git', 'PowerShellForGitHub', 'Terminal-Icons', 'PSReadLine', 'PowerShellGet')\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Initialize-PSEnvironmentConfiguration/#-skipmodules","title":"-SkipModules","text":"<p>Option to skip installation of default modules.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Initialize-PSEnvironmentConfiguration/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"Initialize-PSEnvironmentConfiguration/#inputs","title":"INPUTS","text":""},{"location":"Initialize-PSEnvironmentConfiguration/#outputs","title":"OUTPUTS","text":""},{"location":"Initialize-PSEnvironmentConfiguration/#notes","title":"NOTES","text":"<p>Author: Sam Erde Version: 0.0.3 Modified: 2024/11/08</p> <p>To Do     Add status/verbose output of changes being made     Create basic starter profile if none exist     Create dot-sourced profile     Create interactive picker for packages and modules (separate functions)     Bootstrap Out-GridView or Out-ConsoleGridView for the interactive picker     Do not install already installed packages     Do not install ConsoleGuiTools in Windows PowerShell</p>"},{"location":"Initialize-PSEnvironmentConfiguration/#related-links","title":"RELATED LINKS","text":""},{"location":"Install-CommandNotFoundUtility/","title":"Install-CommandNotFoundUtility","text":""},{"location":"Install-CommandNotFoundUtility/#synopsis","title":"SYNOPSIS","text":"<p>Install and setup the WinGetCommandNotFound utility from Microsoft PowerToys.</p>"},{"location":"Install-CommandNotFoundUtility/#syntax","title":"SYNTAX","text":"<pre><code>Install-CommandNotFoundUtility [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Install-CommandNotFoundUtility/#description","title":"DESCRIPTION","text":"<p>This script installs the Microsoft.WinGet.CommandNotFound module and enables the required PowerShell features.</p>"},{"location":"Install-CommandNotFoundUtility/#examples","title":"EXAMPLES","text":""},{"location":"Install-CommandNotFoundUtility/#example-1","title":"EXAMPLE 1","text":"<pre><code>Install-CommandNotFoundUtility\n</code></pre>"},{"location":"Install-CommandNotFoundUtility/#parameters","title":"PARAMETERS","text":""},{"location":"Install-CommandNotFoundUtility/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"Install-CommandNotFoundUtility/#inputs","title":"INPUTS","text":""},{"location":"Install-CommandNotFoundUtility/#outputs","title":"OUTPUTS","text":""},{"location":"Install-CommandNotFoundUtility/#notes","title":"NOTES","text":"<p>Author: Sam Erde Version: 0.1.1 Modified: 2025-02-08</p> <p>requires -version 7.4</p>"},{"location":"Install-CommandNotFoundUtility/#related-links","title":"RELATED LINKS","text":""},{"location":"Install-OhMyPosh/","title":"Install-OhMyPosh","text":""},{"location":"Install-OhMyPosh/#synopsis","title":"SYNOPSIS","text":"<p>Install Oh My Posh and add it to your profile.</p>"},{"location":"Install-OhMyPosh/#syntax","title":"SYNTAX","text":"<pre><code>Install-OhMyPosh [-WingetSource &lt;String&gt;] [-Method &lt;String&gt;] [-InstallNerdFont] [-Font &lt;String&gt;]\n [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Install-OhMyPosh/#description","title":"DESCRIPTION","text":"<p>An over-engineered script to install Oh My Posh. This script exists as an exercise and is not intended for production use.</p>"},{"location":"Install-OhMyPosh/#examples","title":"EXAMPLES","text":""},{"location":"Install-OhMyPosh/#example-1","title":"EXAMPLE 1","text":"<pre><code>Install-OhMyPosh\n</code></pre>"},{"location":"Install-OhMyPosh/#parameters","title":"PARAMETERS","text":""},{"location":"Install-OhMyPosh/#-wingetsource","title":"-WingetSource","text":"<p>Specify which source to install from.</p> <pre><code>- winget  - Install from winget (default).\n- msstore - Install from the Microsoft Store.\n</code></pre> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: Winget\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Install-OhMyPosh/#-method","title":"-Method","text":"<p>Specify which tool to install Oh My Posh with.</p> <ul> <li>chocolatey</li> <li>direct (default)</li> <li>scoop</li> <li>winget</li> </ul> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: Direct\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Install-OhMyPosh/#-installnerdfont","title":"-InstallNerdFont","text":"<p>Use this switch if you want to install a nerd font for full glyph capabilities in your prompt.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Install-OhMyPosh/#-font","title":"-Font","text":"<p>Choose a nerd font to install.</p> <ul> <li>Default - Installs \"Meslo\" as the default nerd font.</li> <li>Select  - Lets you choose a nerd font from the list.</li> </ul> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: Default\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Install-OhMyPosh/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"Install-OhMyPosh/#inputs","title":"INPUTS","text":""},{"location":"Install-OhMyPosh/#outputs","title":"OUTPUTS","text":""},{"location":"Install-OhMyPosh/#notes","title":"NOTES","text":"<p>Author: Sam Erde Version: 0.1.0 Modified: 2024-10-23</p>"},{"location":"Install-OhMyPosh/#related-links","title":"RELATED LINKS","text":""},{"location":"Install-PowerShellISE/","title":"Install-PowerShellISE","text":""},{"location":"Install-PowerShellISE/#synopsis","title":"SYNOPSIS","text":"<p>Install the Windows PowerShell ISE</p>"},{"location":"Install-PowerShellISE/#syntax","title":"SYNTAX","text":"<pre><code>Install-PowerShellISE [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Install-PowerShellISE/#description","title":"DESCRIPTION","text":"<p>This script installs Windows PowerShell ISE if it was not installed or previously removed. It includes a step that temporarily resets the Windows Automatic Update server source in the registry, which may resolve errors that some systems experience while trying to add Windows Capabilities.</p>"},{"location":"Install-PowerShellISE/#examples","title":"EXAMPLES","text":""},{"location":"Install-PowerShellISE/#example-1","title":"EXAMPLE 1","text":"<pre><code>Install-PowerShellISE\n</code></pre>"},{"location":"Install-PowerShellISE/#parameters","title":"PARAMETERS","text":""},{"location":"Install-PowerShellISE/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"Install-PowerShellISE/#inputs","title":"INPUTS","text":""},{"location":"Install-PowerShellISE/#outputs","title":"OUTPUTS","text":""},{"location":"Install-PowerShellISE/#notes","title":"NOTES","text":"<p>Author: Sam Erde Version: 1.0.0 Modified: 2025-01-07</p> <p>To Do: Add parameter to make the Windows Update registry change optional.</p>"},{"location":"Install-PowerShellISE/#related-links","title":"RELATED LINKS","text":""},{"location":"Install-WinGet/","title":"Install-WinGet","text":""},{"location":"Install-WinGet/#synopsis","title":"SYNOPSIS","text":"<p>Install Winget (beta)</p>"},{"location":"Install-WinGet/#syntax","title":"SYNTAX","text":"<pre><code>Install-WinGet [[-DownloadPath] &lt;String&gt;] [-DownloadOnly] [-KeepDownload]\n [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Install-WinGet/#description","title":"DESCRIPTION","text":"<p>Install WinGet on Windows Sandbox (or on builds of Windows 10 prior to build 1709 that did not ship with it preinstalled). This script exists mostly as an exercise, as there are already many ways to install WinGet.</p>"},{"location":"Install-WinGet/#examples","title":"EXAMPLES","text":""},{"location":"Install-WinGet/#example-1","title":"EXAMPLE 1","text":"<pre><code>Install-WinGet\n</code></pre>"},{"location":"Install-WinGet/#example-2","title":"EXAMPLE 2","text":"<pre><code>Install-WinGet -KeepDownload\n</code></pre> <p>Installs WinGet and keeps the downloaded AppX packages.</p>"},{"location":"Install-WinGet/#parameters","title":"PARAMETERS","text":""},{"location":"Install-WinGet/#-downloadpath","title":"-DownloadPath","text":"<p>Path of the directory to save the downloaded packages in (optional).</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Install-WinGet/#-downloadonly","title":"-DownloadOnly","text":"<p>Download the packages without installing them (optional).</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Install-WinGet/#-keepdownload","title":"-KeepDownload","text":"<p>Keep the downloaded packages (optional).</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Install-WinGet/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"Install-WinGet/#inputs","title":"INPUTS","text":""},{"location":"Install-WinGet/#outputs","title":"OUTPUTS","text":""},{"location":"Install-WinGet/#notes","title":"NOTES","text":"<p>Author: Sam Erde Version: 0.1.0 Modified: 2024-10-23</p> <p>To Do: - Check for newer versions of packages on GitHub - Error handling - Create the target folder if it does not already exist</p>"},{"location":"Install-WinGet/#related-links","title":"RELATED LINKS","text":""},{"location":"New-Credential/","title":"New-Credential","text":""},{"location":"New-Credential/#synopsis","title":"SYNOPSIS","text":"<p>Create a new secure credential.</p>"},{"location":"New-Credential/#syntax","title":"SYNTAX","text":"<pre><code>New-Credential [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"New-Credential/#description","title":"DESCRIPTION","text":"<p>Create a new secure credential to use in other functions.</p>"},{"location":"New-Credential/#examples","title":"EXAMPLES","text":""},{"location":"New-Credential/#example-1","title":"EXAMPLE 1","text":"<pre><code>$Credential = New-Credential\n</code></pre>"},{"location":"New-Credential/#parameters","title":"PARAMETERS","text":""},{"location":"New-Credential/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"New-Credential/#inputs","title":"INPUTS","text":""},{"location":"New-Credential/#outputs","title":"OUTPUTS","text":""},{"location":"New-Credential/#systemmanagementautomationpscredential","title":"System.Management.Automation.PSCredential","text":""},{"location":"New-Credential/#notes","title":"NOTES","text":""},{"location":"New-Credential/#related-links","title":"RELATED LINKS","text":""},{"location":"New-ScriptFromTemplate/","title":"New-ScriptFromTemplate","text":""},{"location":"New-ScriptFromTemplate/#synopsis","title":"SYNOPSIS","text":"<p>Create a new advanced function from a template.</p>"},{"location":"New-ScriptFromTemplate/#syntax","title":"SYNTAX","text":""},{"location":"New-ScriptFromTemplate/#named","title":"Named","text":"<pre><code>New-ScriptFromTemplate [-Name] &lt;String&gt; [-Synopsis &lt;String&gt;] [-Description &lt;String&gt;] [-Alias &lt;String&gt;]\n [-Author &lt;String&gt;] [-Path &lt;String&gt;] [-SkipValidation]\n [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"New-ScriptFromTemplate/#verbnoun","title":"VerbNoun","text":"<pre><code>New-ScriptFromTemplate [-Verb] &lt;String&gt; [-Noun] &lt;String&gt; [-Synopsis &lt;String&gt;] [-Description &lt;String&gt;]\n [-Alias &lt;String&gt;] [-Author &lt;String&gt;] [-Path &lt;String&gt;] [-SkipValidation]\n [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"New-ScriptFromTemplate/#description","title":"DESCRIPTION","text":"<p>This function creates a new function from a template and saves it to a file with the name of the function. It takes values for the function's synopsis, description, and alias as parameters and populates comment- based help for the new function automatically.</p>"},{"location":"New-ScriptFromTemplate/#examples","title":"EXAMPLES","text":""},{"location":"New-ScriptFromTemplate/#example-1","title":"EXAMPLE 1","text":"<pre><code>New-ScriptFromTemplate -Name 'Get-Demo' -Synopsis 'Get a demo.' -Description 'This function gets a demo.' -Alias 'Get-Sample' -Parameter 'SerialNumber'\n</code></pre>"},{"location":"New-ScriptFromTemplate/#example-2","title":"EXAMPLE 2","text":"<pre><code>New-ScriptFromTemplate -Verb Get -Noun Something -Author 'Sam Erde' -Parameter @('Name','Age')\n</code></pre>"},{"location":"New-ScriptFromTemplate/#parameters","title":"PARAMETERS","text":""},{"location":"New-ScriptFromTemplate/#-name","title":"-Name","text":"<p>The name of the new function to create. It is recommended to use ApprovedVerb-Noun for names.</p> <pre><code>Type: String\nParameter Sets: Named\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"New-ScriptFromTemplate/#-verb","title":"-Verb","text":"<p>The verb to use for the function name.</p> <pre><code>Type: String\nParameter Sets: VerbNoun\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"New-ScriptFromTemplate/#-noun","title":"-Noun","text":"<p>The noun to use for the function name.</p> <pre><code>Type: String\nParameter Sets: VerbNoun\nAliases:\n\nRequired: True\nPosition: 2\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"New-ScriptFromTemplate/#-synopsis","title":"-Synopsis","text":"<p>A synopsis of the new function.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"New-ScriptFromTemplate/#-description","title":"-Description","text":"<p>A description of the new function.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"New-ScriptFromTemplate/#-alias","title":"-Alias","text":"<p>Optionally define an alias for the new function.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"New-ScriptFromTemplate/#-author","title":"-Author","text":"<p>Name of the author of the script. Attempts to default to the 'FullName' property of the currently logged in user.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: (Get-CimInstance -ClassName Win32_UserAccount -Filter \"Name = `'$([System.Security.Principal.WindowsIdentity]::GetCurrent().Name.Split('\\')[1])`'\").FullName\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"New-ScriptFromTemplate/#-path","title":"-Path","text":"<p>The path of the directory to save the new script in.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"New-ScriptFromTemplate/#-skipvalidation","title":"-SkipValidation","text":"<p>Optionally skip validation of the script name. This will not check for use of approved verbs or restricted characters.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"New-ScriptFromTemplate/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"New-ScriptFromTemplate/#inputs","title":"INPUTS","text":""},{"location":"New-ScriptFromTemplate/#outputs","title":"OUTPUTS","text":""},{"location":"New-ScriptFromTemplate/#notes","title":"NOTES","text":""},{"location":"New-ScriptFromTemplate/#related-links","title":"RELATED LINKS","text":""},{"location":"Out-JsonFile/","title":"Out-JsonFile","text":""},{"location":"Out-JsonFile/#synopsis","title":"SYNOPSIS","text":"<p>Convert an object to JSON and write it to a file.</p>"},{"location":"Out-JsonFile/#syntax","title":"SYNTAX","text":"<pre><code>Out-JsonFile [-Object] &lt;Object&gt; [-Depth &lt;Int32&gt;] [[-FilePath] &lt;String&gt;]\n [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Out-JsonFile/#description","title":"DESCRIPTION","text":"<p>This function converts an object to JSON and writes the output to the specified file. By default, it saves the file with the name of the object that you provided to the function.</p>"},{"location":"Out-JsonFile/#examples","title":"EXAMPLES","text":""},{"location":"Out-JsonFile/#example-1","title":"EXAMPLE 1","text":"<pre><code>Out-JsonFile -Object $TestObject -FilePath $HOME\n</code></pre> <p>Writes $TestObject as JSON to \"$HOME/TestObject.json\".</p>"},{"location":"Out-JsonFile/#example-2","title":"EXAMPLE 2","text":"<pre><code>Out-JsonFile -Object $TestObject -FilePath C:\\Temp\\report.json\n</code></pre> <p>Writes $TestObject as JSON to C:\\Temp\\report.json.</p>"},{"location":"Out-JsonFile/#example-3","title":"EXAMPLE 3","text":"<pre><code>Out-JsonFile -Object $TestObject\n</code></pre> <p>Writes $TestObject as JSON to TestObject.json in the current working directory of the file system.</p>"},{"location":"Out-JsonFile/#parameters","title":"PARAMETERS","text":""},{"location":"Out-JsonFile/#-object","title":"-Object","text":"<p>The object to convert to JSON. [ValidateScript({ if (-not [string]::IsNullOrWhiteSpace($) -and -not [string]::IsNullOrEmpty($)) { $true } })]</p> <pre><code>Type: Object\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: True (ByValue)\nAccept wildcard characters: False\n</code></pre>"},{"location":"Out-JsonFile/#-depth","title":"-Depth","text":"<p>Depth to serialize the object into JSON. Default is 2.</p> <pre><code>Type: Int32\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: 2\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Out-JsonFile/#-filepath","title":"-FilePath","text":"<p>Full path and filename to save the JSON to. [ValidatePattern('.json$')] # Do not require a JSON extension.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 2\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Out-JsonFile/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"Out-JsonFile/#inputs","title":"INPUTS","text":""},{"location":"Out-JsonFile/#outputs","title":"OUTPUTS","text":""},{"location":"Out-JsonFile/#notes","title":"NOTES","text":"<p>Author: Sam Erde Version: 0.2.1 Modified: 2024/10/29</p>"},{"location":"Out-JsonFile/#related-links","title":"RELATED LINKS","text":""},{"location":"PSPreworkout/","title":"PSPreworkout Module","text":""},{"location":"PSPreworkout/#description","title":"Description","text":"<p>A special mix of tools to help jump start your PowerShell session!</p>"},{"location":"PSPreworkout/#pspreworkout-cmdlets","title":"PSPreworkout Cmdlets","text":""},{"location":"PSPreworkout/#edit-psreadlinehistoryfile","title":"Edit-PSReadLineHistoryFile","text":"<p>Edit the PSReadLine History File</p>"},{"location":"PSPreworkout/#edit-wingetsettingsfile","title":"Edit-WingetSettingsFile","text":"<p>Edit the WinGet settings file.</p>"},{"location":"PSPreworkout/#get-environmentvariable","title":"Get-EnvironmentVariable","text":"<p>Retrieves the value of an environment variable.</p>"},{"location":"PSPreworkout/#get-loadedassembly","title":"Get-LoadedAssembly","text":"<p>Get all assemblies loaded in PowerShell.</p>"},{"location":"PSPreworkout/#get-powershellportable","title":"Get-PowerShellPortable","text":"<p>Download a portable version of PowerShell to run anywhere on demand.</p>"},{"location":"PSPreworkout/#get-typeaccelerator","title":"Get-TypeAccelerator","text":"<p>Get available type accelerators.</p>"},{"location":"PSPreworkout/#initialize-psenvironmentconfiguration","title":"Initialize-PSEnvironmentConfiguration","text":"<p>Initialize configuration your PowerShell environment and git.</p>"},{"location":"PSPreworkout/#install-commandnotfoundutility","title":"Install-CommandNotFoundUtility","text":"<p>Install and setup the WinGetCommandNotFound utility from Microsoft PowerToys.</p>"},{"location":"PSPreworkout/#install-ohmyposh","title":"Install-OhMyPosh","text":"<p>Install Oh My Posh and add it to your profile.</p>"},{"location":"PSPreworkout/#install-powershellise","title":"Install-PowerShellISE","text":"<p>Install the Windows PowerShell ISE</p>"},{"location":"PSPreworkout/#install-winget","title":"Install-WinGet","text":"<p>Install Winget (beta)</p>"},{"location":"PSPreworkout/#new-credential","title":"New-Credential","text":"<p>Create a new secure credential.</p>"},{"location":"PSPreworkout/#new-scriptfromtemplate","title":"New-ScriptFromTemplate","text":"<p>Create a new advanced function from a template.</p>"},{"location":"PSPreworkout/#out-jsonfile","title":"Out-JsonFile","text":"<p>Convert an object to JSON and write it to a file.</p>"},{"location":"PSPreworkout/#set-consolefont","title":"Set-ConsoleFont","text":"<p>Set the font for your consoles.</p>"},{"location":"PSPreworkout/#set-defaultterminal","title":"Set-DefaultTerminal","text":"<p>Configure the default terminal for Windows</p>"},{"location":"PSPreworkout/#set-environmentvariable","title":"Set-EnvironmentVariable","text":"<p>Set environment variables.</p>"},{"location":"PSPreworkout/#show-loadedassembly","title":"Show-LoadedAssembly","text":"<p>Show all assemblies loaded in PowerShell.</p>"},{"location":"PSPreworkout/#show-withoutemptyproperty","title":"Show-WithoutEmptyProperty","text":"<p>Show an object without its empty properties.</p>"},{"location":"PSPreworkout/#test-iselevated","title":"Test-IsElevated","text":"<p>Check if you are running an elevated shell with administrator or root privileges.</p>"},{"location":"PSPreworkout/#update-allthethings","title":"Update-AllTheThings","text":"<p>Update all the things!</p>"},{"location":"Set-ConsoleFont/","title":"Set-ConsoleFont","text":""},{"location":"Set-ConsoleFont/#synopsis","title":"SYNOPSIS","text":"<p>Set the font for your consoles.</p>"},{"location":"Set-ConsoleFont/#syntax","title":"SYNTAX","text":"<pre><code>Set-ConsoleFont [-Font] &lt;String&gt; [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Set-ConsoleFont/#description","title":"DESCRIPTION","text":"<p>Set-ConsoleFont allows you to set the font for all of your registered consoles (PowerShell, Windows PowerShell, Windows Terminal, or Command Prompt). It provides tab-autocomplete for the font parameter, listing all of the Nerd Fonts and monospace fonts installed on your system.</p>"},{"location":"Set-ConsoleFont/#examples","title":"EXAMPLES","text":""},{"location":"Set-ConsoleFont/#example-1","title":"EXAMPLE 1","text":"<pre><code>Set-ConsoleFont -Font 'FiraCode Nerd Font'\n</code></pre>"},{"location":"Set-ConsoleFont/#parameters","title":"PARAMETERS","text":""},{"location":"Set-ConsoleFont/#-font","title":"-Font","text":"<p>The name of the font to set for your consoles.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Set-ConsoleFont/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"Set-ConsoleFont/#inputs","title":"INPUTS","text":""},{"location":"Set-ConsoleFont/#outputs","title":"OUTPUTS","text":""},{"location":"Set-ConsoleFont/#notes","title":"NOTES","text":""},{"location":"Set-ConsoleFont/#related-links","title":"RELATED LINKS","text":""},{"location":"Set-DefaultTerminal/","title":"Set-DefaultTerminal","text":""},{"location":"Set-DefaultTerminal/#synopsis","title":"SYNOPSIS","text":"<p>Configure the default terminal for Windows</p>"},{"location":"Set-DefaultTerminal/#syntax","title":"SYNTAX","text":"<pre><code>Set-DefaultTerminal [[-Name] &lt;String&gt;] [-WhatIf] [-Confirm]\n [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Set-DefaultTerminal/#description","title":"DESCRIPTION","text":"<p>This function sets that default terminal in Windows to your choice of Windows PowerShell, PowerShell, Command Prompt, or Windows Terminal (default).</p>"},{"location":"Set-DefaultTerminal/#examples","title":"EXAMPLES","text":""},{"location":"Set-DefaultTerminal/#example-1","title":"EXAMPLE 1","text":"<pre><code>Set-DefaultTerminal -Name 'WindowsTerminal'\n</code></pre>"},{"location":"Set-DefaultTerminal/#parameters","title":"PARAMETERS","text":""},{"location":"Set-DefaultTerminal/#-name","title":"-Name","text":"<p>The name of the application to use as the default terminal in Windows.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 1\nDefault value: WindowsTerminal\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Set-DefaultTerminal/#-whatif","title":"-WhatIf","text":"<p>Shows what would happen if the cmdlet runs. The cmdlet is not run.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases: wi\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Set-DefaultTerminal/#-confirm","title":"-Confirm","text":"<p>Prompts you for confirmation before running the cmdlet.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases: cf\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Set-DefaultTerminal/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"Set-DefaultTerminal/#inputs","title":"INPUTS","text":""},{"location":"Set-DefaultTerminal/#outputs","title":"OUTPUTS","text":""},{"location":"Set-DefaultTerminal/#notes","title":"NOTES","text":"<p>Author: Sam Erde Version: 0.0.1 Modified: 2024-11-15</p>"},{"location":"Set-DefaultTerminal/#related-links","title":"RELATED LINKS","text":""},{"location":"Set-EnvironmentVariable/","title":"Set-EnvironmentVariable","text":""},{"location":"Set-EnvironmentVariable/#synopsis","title":"SYNOPSIS","text":"<p>Set environment variables.</p>"},{"location":"Set-EnvironmentVariable/#syntax","title":"SYNTAX","text":"<pre><code>Set-EnvironmentVariable [-Name] &lt;String&gt; [-Value] &lt;String&gt; [-Target] &lt;EnvironmentVariableTarget&gt;\n [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Set-EnvironmentVariable/#description","title":"DESCRIPTION","text":"<p>Set environment variables in any OS using .NET types.</p>"},{"location":"Set-EnvironmentVariable/#examples","title":"EXAMPLES","text":""},{"location":"Set-EnvironmentVariable/#example-1","title":"EXAMPLE 1","text":"<pre><code>Set-EnvironmentVariable -Name 'FavoriteDrink' -Value 'Coffee' -Target 'User'\n</code></pre>"},{"location":"Set-EnvironmentVariable/#parameters","title":"PARAMETERS","text":""},{"location":"Set-EnvironmentVariable/#-name","title":"-Name","text":"<p>Parameter description</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Set-EnvironmentVariable/#-value","title":"-Value","text":"<p>Parameter description</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 2\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Set-EnvironmentVariable/#-target","title":"-Target","text":"<p>Parameter description</p> <pre><code>Type: EnvironmentVariableTarget\nParameter Sets: (All)\nAliases:\nAccepted values: Process, User, Machine\n\nRequired: True\nPosition: 3\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Set-EnvironmentVariable/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"Set-EnvironmentVariable/#inputs","title":"INPUTS","text":""},{"location":"Set-EnvironmentVariable/#outputs","title":"OUTPUTS","text":""},{"location":"Set-EnvironmentVariable/#notes","title":"NOTES","text":"<p>Author: Sam Erde Version: 1.0.0 Modified: 2024-10-23</p>"},{"location":"Set-EnvironmentVariable/#related-links","title":"RELATED LINKS","text":""},{"location":"Show-LoadedAssembly/","title":"Show-LoadedAssembly","text":""},{"location":"Show-LoadedAssembly/#synopsis","title":"SYNOPSIS","text":"<p>Show all assemblies loaded in PowerShell.</p>"},{"location":"Show-LoadedAssembly/#syntax","title":"SYNTAX","text":"<pre><code>Show-LoadedAssembly [-GridView] [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Show-LoadedAssembly/#description","title":"DESCRIPTION","text":"<p>Show all assemblies loaded in PowerShell.</p>"},{"location":"Show-LoadedAssembly/#examples","title":"EXAMPLES","text":""},{"location":"Show-LoadedAssembly/#example-1","title":"EXAMPLE 1","text":"<pre><code>Show-LoadedAssembly\n</code></pre> <p>Shows a simple list of all loaded assemblies.</p>"},{"location":"Show-LoadedAssembly/#example-2","title":"EXAMPLE 2","text":"<pre><code>Show-LoadedAssembly -GridView\n</code></pre> <p>Shows a list of all loaded assemblies in a grid view.</p>"},{"location":"Show-LoadedAssembly/#parameters","title":"PARAMETERS","text":""},{"location":"Show-LoadedAssembly/#-gridview","title":"-GridView","text":"<p>Show the results in a grid view.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Show-LoadedAssembly/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"Show-LoadedAssembly/#inputs","title":"INPUTS","text":""},{"location":"Show-LoadedAssembly/#outputs","title":"OUTPUTS","text":""},{"location":"Show-LoadedAssembly/#systemobject","title":"System.Object","text":""},{"location":"Show-LoadedAssembly/#notes","title":"NOTES","text":""},{"location":"Show-LoadedAssembly/#related-links","title":"RELATED LINKS","text":""},{"location":"Show-WithoutEmptyProperty/","title":"Show-WithoutEmptyProperty","text":""},{"location":"Show-WithoutEmptyProperty/#synopsis","title":"SYNOPSIS","text":"<p>Show an object without its empty properties.</p>"},{"location":"Show-WithoutEmptyProperty/#syntax","title":"SYNTAX","text":"<pre><code>Show-WithoutEmptyProperty [-Object] &lt;Object&gt; [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Show-WithoutEmptyProperty/#description","title":"DESCRIPTION","text":"<p>This function shows the properties of an object with all of its empty properties filtered out.</p>"},{"location":"Show-WithoutEmptyProperty/#examples","title":"EXAMPLES","text":""},{"location":"Show-WithoutEmptyProperty/#example-1","title":"EXAMPLE 1","text":"<pre><code>Show-WithoutEmptyProperty -Object $Object\n</code></pre>"},{"location":"Show-WithoutEmptyProperty/#example-2","title":"EXAMPLE 2","text":"<pre><code>$Desk = [PSCustomObject]@{\n    Model = 'PSDesk'\n    Height = $null\n    Width = $null\n    Colors = @('Black', 'Gray')\n    Adjustable = $true\n}\n$Object = New-Object -TypeName PSObject -Property $Desk\nShow-WithoutEmptyProperty -Object $Object\n</code></pre> <p>This example creates an object from a hash table and then shows that object's properties that have values.</p>"},{"location":"Show-WithoutEmptyProperty/#example-3","title":"EXAMPLE 3","text":"<pre><code>Show-WithoutEmptyProperty -Object (Get-Item $HOME)\n</code></pre> <p>This example gets the home folder object while invoking the function.</p>"},{"location":"Show-WithoutEmptyProperty/#example-4","title":"EXAMPLE 4","text":"<pre><code>$Object | Show-WithoutEmptyProperty\n</code></pre> <p>This example shows how an object can be piped to the function.</p>"},{"location":"Show-WithoutEmptyProperty/#example-5","title":"EXAMPLE 5","text":"<pre><code>Get-ChildItem $HOME | Select-Object -First 1 | Show-WithoutEmptyProperty\n</code></pre> <p>This example gets the home folder object and pipes it to the Show-WithoutEmptyProperty function.</p>"},{"location":"Show-WithoutEmptyProperty/#parameters","title":"PARAMETERS","text":""},{"location":"Show-WithoutEmptyProperty/#-object","title":"-Object","text":"<p>The object to show.</p> <pre><code>Type: Object\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: True (ByValue)\nAccept wildcard characters: False\n</code></pre>"},{"location":"Show-WithoutEmptyProperty/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"Show-WithoutEmptyProperty/#inputs","title":"INPUTS","text":""},{"location":"Show-WithoutEmptyProperty/#outputs","title":"OUTPUTS","text":""},{"location":"Show-WithoutEmptyProperty/#pscustomobject","title":"PSCustomObject","text":""},{"location":"Show-WithoutEmptyProperty/#notes","title":"NOTES","text":"<p>Author: Sam Erde Version: 1.0.0 Modified: 2024-10-23</p> <p>I am grateful to Jeffrey Hicks for guiding me towards an understanding of how to complete this function and for providing even nicer code than I started with. I encourage you to reach out to him for PowerShell training and subscribe to his newsletter! \ud83d\ude4f</p> <pre><code>https://jdhitsolutions.github.io/\nhttps://www.linkedin.com/in/jefferyhicks/\nhttps://twitter.com/JeffHicks\n</code></pre>"},{"location":"Show-WithoutEmptyProperty/#related-links","title":"RELATED LINKS","text":""},{"location":"Test-IsElevated/","title":"Test-IsElevated","text":""},{"location":"Test-IsElevated/#synopsis","title":"SYNOPSIS","text":"<p>Check if you are running an elevated shell with administrator or root privileges.</p>"},{"location":"Test-IsElevated/#syntax","title":"SYNTAX","text":"<pre><code>Test-IsElevated [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Test-IsElevated/#description","title":"DESCRIPTION","text":"<p>Check if you are running an elevated shell with administrator or root privileges.</p>"},{"location":"Test-IsElevated/#examples","title":"EXAMPLES","text":""},{"location":"Test-IsElevated/#example-1","title":"EXAMPLE 1","text":"<pre><code>Test-IsElevated\n</code></pre>"},{"location":"Test-IsElevated/#parameters","title":"PARAMETERS","text":""},{"location":"Test-IsElevated/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"Test-IsElevated/#inputs","title":"INPUTS","text":""},{"location":"Test-IsElevated/#outputs","title":"OUTPUTS","text":""},{"location":"Test-IsElevated/#boolean","title":"Boolean","text":""},{"location":"Test-IsElevated/#notes","title":"NOTES","text":"<p>Author: Sam Erde Version: 1.0.0 Modified: 2024-10-23</p>"},{"location":"Test-IsElevated/#related-links","title":"RELATED LINKS","text":""},{"location":"Update-AllTheThings/","title":"Update-AllTheThings","text":""},{"location":"Update-AllTheThings/#synopsis","title":"SYNOPSIS","text":"<p>Update all the things!</p>"},{"location":"Update-AllTheThings/#syntax","title":"SYNTAX","text":"<pre><code>Update-AllTheThings [-SkipModules] [-SkipScripts] [-SkipHelp] [-SkipWinGet] [-IncludeChocolatey]\n [-WhatIf] [-Confirm] [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Update-AllTheThings/#description","title":"DESCRIPTION","text":"<p>A script to automatically update all PowerShell modules, PowerShell Help, and packages (apt, brew, chocolately, winget).</p>"},{"location":"Update-AllTheThings/#examples","title":"EXAMPLES","text":""},{"location":"Update-AllTheThings/#example-1","title":"EXAMPLE 1","text":"<pre><code>Update-AllTheThings\n</code></pre> <p>Updates all of the things it can!</p>"},{"location":"Update-AllTheThings/#parameters","title":"PARAMETERS","text":""},{"location":"Update-AllTheThings/#-skipmodules","title":"-SkipModules","text":"<p>Skip the step that updates PowerShell modules.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Update-AllTheThings/#-skipscripts","title":"-SkipScripts","text":"<p>Skip the step that updates PowerShell scripts.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Update-AllTheThings/#-skiphelp","title":"-SkipHelp","text":"<p>Skip the step that updates PowerShell help.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Update-AllTheThings/#-skipwinget","title":"-SkipWinGet","text":"<p>Skip the step the updates WinGet packages.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Update-AllTheThings/#-includechocolatey","title":"-IncludeChocolatey","text":"<p>Include Chocolatey package updates.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases: Skip-Choco\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Update-AllTheThings/#-whatif","title":"-WhatIf","text":"<p>Shows what would happen if the cmdlet runs. The cmdlet is not run.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases: wi\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Update-AllTheThings/#-confirm","title":"-Confirm","text":"<p>Prompts you for confirmation before running the cmdlet.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases: cf\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Update-AllTheThings/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"Update-AllTheThings/#inputs","title":"INPUTS","text":""},{"location":"Update-AllTheThings/#outputs","title":"OUTPUTS","text":""},{"location":"Update-AllTheThings/#notes","title":"NOTES","text":"<p>Author: Sam Erde Version: 0.5.9 Modified: 2024-10-23</p>"},{"location":"Update-AllTheThings/#related-links","title":"RELATED LINKS","text":""}]}