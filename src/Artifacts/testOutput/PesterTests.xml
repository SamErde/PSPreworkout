<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="143" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2025-06-09" time="14:57:23">
  <environment os-version="6.11.0-1014-azure" clr-version="8.0.12" nunit-version="2.5.8.0" cwd="/home/runner/work/PSPreworkout/PSPreworkout/src/Tests/Unit" platform="Linux" user="runner" machine-name="pkrvmf6wy0o8zjz" user-domain="" />
  <culture-info current-culture="" current-uiculture="" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Success" success="True" time="4.7646" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="/home/runner/work/PSPreworkout/PSPreworkout/src/Tests/Unit/ExportedFunctions.Tests.ps1" executed="True" result="Success" success="True" time="4.0195" asserts="0" description="/home/runner/work/PSPreworkout/PSPreworkout/src/Tests/Unit/ExportedFunctions.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="PSPreworkout" executed="True" result="Success" success="True" time="3.4002" asserts="0" description="PSPreworkout">
            <results>
              <test-suite type="TestFixture" name="PSPreworkout.Exported Commands" executed="True" result="Success" success="True" time="0.5376" asserts="0" description="PSPreworkout.Exported Commands">
                <results>
                  <test-suite type="TestFixture" name="PSPreworkout.Exported Commands.Number of commands" executed="True" result="Success" success="True" time="0.1584" asserts="0" description="PSPreworkout.Exported Commands.Number of commands">
                    <results>
                      <test-case description="Exports the same number of public functions as what is listed in the Module Manifest" name="PSPreworkout.Exported Commands.Number of commands.Exports the same number of public functions as what is listed in the Module Manifest" time="0.1316" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Exported Commands.Explicitly exported commands" executed="True" result="Success" success="True" time="0.5319" asserts="0" description="PSPreworkout.Exported Commands.Explicitly exported commands">
                    <results>
                      <test-suite type="ParameterizedTest" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes &lt;_&gt; in the Module Manifest ExportedFunctions" executed="True" result="Success" success="True" time="0.3611" asserts="0" description="Includes &lt;_&gt; in the Module Manifest ExportedFunctions">
                        <results>
                          <test-case description="Includes Edit-HistoryFile in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Edit-HistoryFile in the Module Manifest ExportedFunctions" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Get-Assembly in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Get-Assembly in the Module Manifest ExportedFunctions" time="0.0102" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Get-PSPortable in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Get-PSPortable in the Module Manifest ExportedFunctions" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Init-PSEnvConfig in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Init-PSEnvConfig in the Module Manifest ExportedFunctions" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes New-Script in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes New-Script in the Module Manifest ExportedFunctions" time="0.0066" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Show-LoadedAssemblies in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Show-LoadedAssemblies in the Module Manifest ExportedFunctions" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Edit-PSReadLineHistoryFile in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Edit-PSReadLineHistoryFile in the Module Manifest ExportedFunctions" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Edit-WingetSettingsFile in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Edit-WingetSettingsFile in the Module Manifest ExportedFunctions" time="0.0109" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Get-CommandHistory in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Get-CommandHistory in the Module Manifest ExportedFunctions" time="0.0106" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Get-EnvironmentVariable in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Get-EnvironmentVariable in the Module Manifest ExportedFunctions" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Get-LoadedAssembly in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Get-LoadedAssembly in the Module Manifest ExportedFunctions" time="0.0228" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Get-ModulesWithUpdate in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Get-ModulesWithUpdate in the Module Manifest ExportedFunctions" time="0.0226" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Get-PowerShellPortable in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Get-PowerShellPortable in the Module Manifest ExportedFunctions" time="0.0195" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Get-TypeAccelerator in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Get-TypeAccelerator in the Module Manifest ExportedFunctions" time="0.0221" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Initialize-PSEnvironmentConfiguration in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Initialize-PSEnvironmentConfiguration in the Module Manifest ExportedFunctions" time="0.0195" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Install-CommandNotFoundUtility in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Install-CommandNotFoundUtility in the Module Manifest ExportedFunctions" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Install-OhMyPosh in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Install-OhMyPosh in the Module Manifest ExportedFunctions" time="0.0086" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Install-PowerShellISE in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Install-PowerShellISE in the Module Manifest ExportedFunctions" time="0.0086" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Install-WinGet in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Install-WinGet in the Module Manifest ExportedFunctions" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes New-Credential in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes New-Credential in the Module Manifest ExportedFunctions" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes New-ScriptFromTemplate in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes New-ScriptFromTemplate in the Module Manifest ExportedFunctions" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Out-JsonFile in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Out-JsonFile in the Module Manifest ExportedFunctions" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Set-ConsoleFont in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Set-ConsoleFont in the Module Manifest ExportedFunctions" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Set-DefaultTerminal in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Set-DefaultTerminal in the Module Manifest ExportedFunctions" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Set-EnvironmentVariable in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Set-EnvironmentVariable in the Module Manifest ExportedFunctions" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Show-LoadedAssembly in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Show-LoadedAssembly in the Module Manifest ExportedFunctions" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Show-WithoutEmptyProperty in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Show-WithoutEmptyProperty in the Module Manifest ExportedFunctions" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Test-IsElevated in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Test-IsElevated in the Module Manifest ExportedFunctions" time="0.0088" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Update-AllTheThings in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Update-AllTheThings in the Module Manifest ExportedFunctions" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="PSPreworkout.Command Help" executed="True" result="Success" success="True" time="3.3844" asserts="0" description="PSPreworkout.Command Help">
                <results>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Edit-HistoryFile" executed="True" result="Success" success="True" time="0.0591" asserts="0" description="PSPreworkout.Command Help.Edit-HistoryFile">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Edit-HistoryFile.Includes a Synopsis" time="0.0205" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Edit-HistoryFile.Includes a Description" time="0.0116" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Edit-HistoryFile.Includes an Example" time="0.018" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Get-Assembly" executed="True" result="Success" success="True" time="0.1086" asserts="0" description="PSPreworkout.Command Help.Get-Assembly">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Get-Assembly.Includes a Synopsis" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Get-Assembly.Includes a Description" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Get-Assembly.Includes an Example" time="0.0106" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Get-PSPortable" executed="True" result="Success" success="True" time="0.1601" asserts="0" description="PSPreworkout.Command Help.Get-PSPortable">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Get-PSPortable.Includes a Synopsis" time="0.0184" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Get-PSPortable.Includes a Description" time="0.0135" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Get-PSPortable.Includes an Example" time="0.0123" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Init-PSEnvConfig" executed="True" result="Success" success="True" time="0.2239" asserts="0" description="PSPreworkout.Command Help.Init-PSEnvConfig">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Init-PSEnvConfig.Includes a Synopsis" time="0.0205" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Init-PSEnvConfig.Includes a Description" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Init-PSEnvConfig.Includes an Example" time="0.0217" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.New-Script" executed="True" result="Success" success="True" time="0.2762" asserts="0" description="PSPreworkout.Command Help.New-Script">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.New-Script.Includes a Synopsis" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.New-Script.Includes a Description" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.New-Script.Includes an Example" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Show-LoadedAssemblies" executed="True" result="Success" success="True" time="0.3157" asserts="0" description="PSPreworkout.Command Help.Show-LoadedAssemblies">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Show-LoadedAssemblies.Includes a Synopsis" time="0.0118" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Show-LoadedAssemblies.Includes a Description" time="0.0106" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Show-LoadedAssemblies.Includes an Example" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Edit-PSReadLineHistoryFile" executed="True" result="Success" success="True" time="0.4579" asserts="0" description="PSPreworkout.Command Help.Edit-PSReadLineHistoryFile">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Edit-PSReadLineHistoryFile.Includes a Synopsis" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Edit-PSReadLineHistoryFile.Includes a Description" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Edit-PSReadLineHistoryFile.Includes an Example" time="0.0486" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Edit-WingetSettingsFile" executed="True" result="Success" success="True" time="0.5684" asserts="0" description="PSPreworkout.Command Help.Edit-WingetSettingsFile">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Edit-WingetSettingsFile.Includes a Synopsis" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Edit-WingetSettingsFile.Includes a Description" time="0.0335" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Edit-WingetSettingsFile.Includes an Example" time="0.034" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Get-CommandHistory" executed="True" result="Success" success="True" time="0.6744" asserts="0" description="PSPreworkout.Command Help.Get-CommandHistory">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Get-CommandHistory.Includes a Synopsis" time="0.034" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Get-CommandHistory.Includes a Description" time="0.0332" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Get-CommandHistory.Includes an Example" time="0.0335" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Get-EnvironmentVariable" executed="True" result="Success" success="True" time="0.7842" asserts="0" description="PSPreworkout.Command Help.Get-EnvironmentVariable">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Get-EnvironmentVariable.Includes a Synopsis" time="0.0349" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Get-EnvironmentVariable.Includes a Description" time="0.0342" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Get-EnvironmentVariable.Includes an Example" time="0.0354" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Get-LoadedAssembly" executed="True" result="Success" success="True" time="0.8913" asserts="0" description="PSPreworkout.Command Help.Get-LoadedAssembly">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Get-LoadedAssembly.Includes a Synopsis" time="0.0333" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Get-LoadedAssembly.Includes a Description" time="0.0331" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Get-LoadedAssembly.Includes an Example" time="0.0319" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Get-ModulesWithUpdate" executed="True" result="Success" success="True" time="0.9959" asserts="0" description="PSPreworkout.Command Help.Get-ModulesWithUpdate">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Get-ModulesWithUpdate.Includes a Synopsis" time="0.0348" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Get-ModulesWithUpdate.Includes a Description" time="0.033" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Get-ModulesWithUpdate.Includes an Example" time="0.032" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Get-PowerShellPortable" executed="True" result="Success" success="True" time="1.1031" asserts="0" description="PSPreworkout.Command Help.Get-PowerShellPortable">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Get-PowerShellPortable.Includes a Synopsis" time="0.0339" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Get-PowerShellPortable.Includes a Description" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Get-PowerShellPortable.Includes an Example" time="0.032" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Get-TypeAccelerator" executed="True" result="Success" success="True" time="1.2131" asserts="0" description="PSPreworkout.Command Help.Get-TypeAccelerator">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Get-TypeAccelerator.Includes a Synopsis" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Get-TypeAccelerator.Includes a Description" time="0.0337" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Get-TypeAccelerator.Includes an Example" time="0.0325" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Initialize-PSEnvironmentConfiguration" executed="True" result="Success" success="True" time="1.3244" asserts="0" description="PSPreworkout.Command Help.Initialize-PSEnvironmentConfiguration">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Initialize-PSEnvironmentConfiguration.Includes a Synopsis" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Initialize-PSEnvironmentConfiguration.Includes a Description" time="0.0351" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Initialize-PSEnvironmentConfiguration.Includes an Example" time="0.0351" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Install-CommandNotFoundUtility" executed="True" result="Success" success="True" time="1.4249" asserts="0" description="PSPreworkout.Command Help.Install-CommandNotFoundUtility">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Install-CommandNotFoundUtility.Includes a Synopsis" time="0.0326" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Install-CommandNotFoundUtility.Includes a Description" time="0.0318" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Install-CommandNotFoundUtility.Includes an Example" time="0.0313" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Install-OhMyPosh" executed="True" result="Success" success="True" time="1.536" asserts="0" description="PSPreworkout.Command Help.Install-OhMyPosh">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Install-OhMyPosh.Includes a Synopsis" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Install-OhMyPosh.Includes a Description" time="0.0331" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Install-OhMyPosh.Includes an Example" time="0.0328" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Install-PowerShellISE" executed="True" result="Success" success="True" time="1.6407" asserts="0" description="PSPreworkout.Command Help.Install-PowerShellISE">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Install-PowerShellISE.Includes a Synopsis" time="0.0342" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Install-PowerShellISE.Includes a Description" time="0.0326" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Install-PowerShellISE.Includes an Example" time="0.0328" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Install-WinGet" executed="True" result="Success" success="True" time="1.7461" asserts="0" description="PSPreworkout.Command Help.Install-WinGet">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Install-WinGet.Includes a Synopsis" time="0.0344" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Install-WinGet.Includes a Description" time="0.0328" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Install-WinGet.Includes an Example" time="0.0332" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.New-Credential" executed="True" result="Success" success="True" time="1.8555" asserts="0" description="PSPreworkout.Command Help.New-Credential">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.New-Credential.Includes a Synopsis" time="0.0337" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.New-Credential.Includes a Description" time="0.036" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.New-Credential.Includes an Example" time="0.0346" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.New-ScriptFromTemplate" executed="True" result="Success" success="True" time="1.9717" asserts="0" description="PSPreworkout.Command Help.New-ScriptFromTemplate">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.New-ScriptFromTemplate.Includes a Synopsis" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.New-ScriptFromTemplate.Includes a Description" time="0.0336" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.New-ScriptFromTemplate.Includes an Example" time="0.0352" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Out-JsonFile" executed="True" result="Success" success="True" time="2.0725" asserts="0" description="PSPreworkout.Command Help.Out-JsonFile">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Out-JsonFile.Includes a Synopsis" time="0.0328" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Out-JsonFile.Includes a Description" time="0.0319" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Out-JsonFile.Includes an Example" time="0.0318" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Set-ConsoleFont" executed="True" result="Success" success="True" time="2.1783" asserts="0" description="PSPreworkout.Command Help.Set-ConsoleFont">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Set-ConsoleFont.Includes a Synopsis" time="0.0313" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Set-ConsoleFont.Includes a Description" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Set-ConsoleFont.Includes an Example" time="0.0315" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Set-DefaultTerminal" executed="True" result="Success" success="True" time="2.2779" asserts="0" description="PSPreworkout.Command Help.Set-DefaultTerminal">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Set-DefaultTerminal.Includes a Synopsis" time="0.0316" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Set-DefaultTerminal.Includes a Description" time="0.0317" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Set-DefaultTerminal.Includes an Example" time="0.0321" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Set-EnvironmentVariable" executed="True" result="Success" success="True" time="2.3763" asserts="0" description="PSPreworkout.Command Help.Set-EnvironmentVariable">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Set-EnvironmentVariable.Includes a Synopsis" time="0.0319" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Set-EnvironmentVariable.Includes a Description" time="0.0311" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Set-EnvironmentVariable.Includes an Example" time="0.0313" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Show-LoadedAssembly" executed="True" result="Success" success="True" time="2.4781" asserts="0" description="PSPreworkout.Command Help.Show-LoadedAssembly">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Show-LoadedAssembly.Includes a Synopsis" time="0.0322" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Show-LoadedAssembly.Includes a Description" time="0.0309" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Show-LoadedAssembly.Includes an Example" time="0.0346" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Show-WithoutEmptyProperty" executed="True" result="Success" success="True" time="2.5788" asserts="0" description="PSPreworkout.Command Help.Show-WithoutEmptyProperty">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Show-WithoutEmptyProperty.Includes a Synopsis" time="0.0323" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Show-WithoutEmptyProperty.Includes a Description" time="0.0314" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Show-WithoutEmptyProperty.Includes an Example" time="0.0321" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Test-IsElevated" executed="True" result="Success" success="True" time="2.6814" asserts="0" description="PSPreworkout.Command Help.Test-IsElevated">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Test-IsElevated.Includes a Synopsis" time="0.0341" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Test-IsElevated.Includes a Description" time="0.0308" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Test-IsElevated.Includes an Example" time="0.0322" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Update-AllTheThings" executed="True" result="Success" success="True" time="2.8418" asserts="0" description="PSPreworkout.Command Help.Update-AllTheThings">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Update-AllTheThings.Includes a Synopsis" time="0.0499" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Update-AllTheThings.Includes a Description" time="0.0506" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Update-AllTheThings.Includes an Example" time="0.0535" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/home/runner/work/PSPreworkout/PSPreworkout/src/Tests/Unit/Get-EnvironmentVariable.Tests.ps1" executed="True" result="Success" success="True" time="0.0736" asserts="0" description="/home/runner/work/PSPreworkout/PSPreworkout/src/Tests/Unit/Get-EnvironmentVariable.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-EnvironmentVariable" executed="True" result="Success" success="True" time="0.0552" asserts="0" description="Get-EnvironmentVariable">
            <results>
              <test-case description="Should return the value of an existing environment variable" name="Get-EnvironmentVariable.Should return the value of an existing environment variable" time="0.0505" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/home/runner/work/PSPreworkout/PSPreworkout/src/Tests/Unit/Get-LoadedAssembly.Tests.ps1" executed="True" result="Success" success="True" time="0.0839" asserts="0" description="/home/runner/work/PSPreworkout/PSPreworkout/src/Tests/Unit/Get-LoadedAssembly.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-LoadedAssembly Tests" executed="True" result="Success" success="True" time="0.0577" asserts="0" description="Get-LoadedAssembly Tests">
            <results>
              <test-suite type="TestFixture" name="Get-LoadedAssembly Tests.Function Tests" executed="True" result="Success" success="True" time="0.0544" asserts="0" description="Get-LoadedAssembly Tests.Function Tests">
                <results>
                  <test-case description="Function should exist" name="Get-LoadedAssembly Tests.Function Tests.Function should exist" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Function should have correct alias" name="Get-LoadedAssembly Tests.Function Tests.Function should have correct alias" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Function should have valid HelpUri" name="Get-LoadedAssembly Tests.Function Tests.Function should have valid HelpUri" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Function should return non-empty output" name="Get-LoadedAssembly Tests.Function Tests.Function should return non-empty output" time="0.0233" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/home/runner/work/PSPreworkout/PSPreworkout/src/Tests/Unit/Get-PowerShellPortable.Tests.ps1" executed="True" result="Success" success="True" time="0.0744" asserts="0" description="/home/runner/work/PSPreworkout/PSPreworkout/src/Tests/Unit/Get-PowerShellPortable.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-PowerShellPortable Tests" executed="True" result="Success" success="True" time="0.0533" asserts="0" description="Get-PowerShellPortable Tests">
            <results>
              <test-suite type="TestFixture" name="Get-PowerShellPortable Tests.Function Tests" executed="True" result="Success" success="True" time="0.0491" asserts="0" description="Get-PowerShellPortable Tests.Function Tests">
                <results>
                  <test-case description="Function should exist" name="Get-PowerShellPortable Tests.Function Tests.Function should exist" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Function should have valid HelpUri" name="Get-PowerShellPortable Tests.Function Tests.Function should have valid HelpUri" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Function should determine correct download URL for Windows" name="Get-PowerShellPortable Tests.Function Tests.Function should determine correct download URL for Windows" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Function should determine correct download URL for Linux" name="Get-PowerShellPortable Tests.Function Tests.Function should determine correct download URL for Linux" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Function should determine correct download URL for macOS" name="Get-PowerShellPortable Tests.Function Tests.Function should determine correct download URL for macOS" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/home/runner/work/PSPreworkout/PSPreworkout/src/Tests/Unit/Get-TypeAccelerator.Tests.ps1" executed="True" result="Success" success="True" time="0.3993" asserts="0" description="/home/runner/work/PSPreworkout/PSPreworkout/src/Tests/Unit/Get-TypeAccelerator.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-TypeAccelerator Tests" executed="True" result="Success" success="True" time="0.3798" asserts="0" description="Get-TypeAccelerator Tests">
            <results>
              <test-suite type="TestFixture" name="Get-TypeAccelerator Tests.Function Tests" executed="True" result="Success" success="True" time="0.3763" asserts="0" description="Get-TypeAccelerator Tests.Function Tests">
                <results>
                  <test-case description="Function should exist" name="Get-TypeAccelerator Tests.Function Tests.Function should exist" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Function should have valid HelpUri" name="Get-TypeAccelerator Tests.Function Tests.Function should have valid HelpUri" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Function should return an object" name="Get-TypeAccelerator Tests.Function Tests.Function should return an object" time="0.3179" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Function should return non-empty output" name="Get-TypeAccelerator Tests.Function Tests.Function should return non-empty output" time="0.0135" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Function should filter by exact name" name="Get-TypeAccelerator Tests.Function Tests.Function should filter by exact name" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Function should filter by wildcard name" name="Get-TypeAccelerator Tests.Function Tests.Function should filter by wildcard name" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/home/runner/work/PSPreworkout/PSPreworkout/src/Tests/Unit/PSPreworkout-Module.Tests.ps1" executed="True" result="Success" success="True" time="0.1138" asserts="0" description="/home/runner/work/PSPreworkout/PSPreworkout/src/Tests/Unit/PSPreworkout-Module.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Module Tests" executed="True" result="Success" success="True" time="0.0853" asserts="0" description="Module Tests">
            <results>
              <test-suite type="TestFixture" name="Module Tests.Module Tests" executed="True" result="Success" success="True" time="0.0822" asserts="0" description="Module Tests.Module Tests">
                <results>
                  <test-case description="Passes Test-ModuleManifest" name="Module Tests.Module Tests.Passes Test-ModuleManifest" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="root module PSPreworkout.psm1 should exist" name="Module Tests.Module Tests.root module PSPreworkout.psm1 should exist" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="manifest should contain PSPreworkout.psm1" name="Module Tests.Module Tests.manifest should contain PSPreworkout.psm1" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should have a matching module name in the manifest" name="Module Tests.Module Tests.should have a matching module name in the manifest" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should have a valid description in the manifest" name="Module Tests.Module Tests.should have a valid description in the manifest" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should have a valid author in the manifest" name="Module Tests.Module Tests.should have a valid author in the manifest" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should have a valid version in the manifest" name="Module Tests.Module Tests.should have a valid version in the manifest" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should have a valid guid in the manifest" name="Module Tests.Module Tests.should have a valid guid in the manifest" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should not have any spaces in the tags" name="Module Tests.Module Tests.should not have any spaces in the tags" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should have a valid project Uri" name="Module Tests.Module Tests.should have a valid project Uri" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>