<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="143" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2025-06-03" time="20:41:13">
  <environment cwd="/home/runner/work/PSPreworkout/PSPreworkout/src/Tests/Unit" machine-name="pkrvmf6wy0o8zjz" nunit-version="2.5.8.0" clr-version="8.0.12" user="runner" platform="Linux" os-version="6.11.0-1014-azure" user-domain="" />
  <culture-info current-culture="" current-uiculture="" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Success" success="True" time="4.2888" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="/home/runner/work/PSPreworkout/PSPreworkout/src/Tests/Unit/ExportedFunctions.Tests.ps1" executed="True" result="Success" success="True" time="3.7211" asserts="0" description="/home/runner/work/PSPreworkout/PSPreworkout/src/Tests/Unit/ExportedFunctions.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="PSPreworkout" executed="True" result="Success" success="True" time="3.1915" asserts="0" description="PSPreworkout">
            <results>
              <test-suite type="TestFixture" name="PSPreworkout.Exported Commands" executed="True" result="Success" success="True" time="0.5279" asserts="0" description="PSPreworkout.Exported Commands">
                <results>
                  <test-suite type="TestFixture" name="PSPreworkout.Exported Commands.Number of commands" executed="True" result="Success" success="True" time="0.1449" asserts="0" description="PSPreworkout.Exported Commands.Number of commands">
                    <results>
                      <test-case description="Exports the same number of public functions as what is listed in the Module Manifest" name="PSPreworkout.Exported Commands.Number of commands.Exports the same number of public functions as what is listed in the Module Manifest" time="0.1166" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Exported Commands.Explicitly exported commands" executed="True" result="Success" success="True" time="0.5214" asserts="0" description="PSPreworkout.Exported Commands.Explicitly exported commands">
                    <results>
                      <test-suite type="ParameterizedTest" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes &lt;_&gt; in the Module Manifest ExportedFunctions" executed="True" result="Success" success="True" time="0.3647" asserts="0" description="Includes &lt;_&gt; in the Module Manifest ExportedFunctions">
                        <results>
                          <test-case description="Includes Edit-HistoryFile in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Edit-HistoryFile in the Module Manifest ExportedFunctions" time="0.0188" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Get-Assembly in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Get-Assembly in the Module Manifest ExportedFunctions" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Get-PSPortable in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Get-PSPortable in the Module Manifest ExportedFunctions" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Init-PSEnvConfig in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Init-PSEnvConfig in the Module Manifest ExportedFunctions" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes New-Script in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes New-Script in the Module Manifest ExportedFunctions" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Show-LoadedAssemblies in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Show-LoadedAssemblies in the Module Manifest ExportedFunctions" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Edit-PSReadLineHistoryFile in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Edit-PSReadLineHistoryFile in the Module Manifest ExportedFunctions" time="0.0104" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Edit-WingetSettingsFile in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Edit-WingetSettingsFile in the Module Manifest ExportedFunctions" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Get-CommandHistory in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Get-CommandHistory in the Module Manifest ExportedFunctions" time="0.0354" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Get-EnvironmentVariable in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Get-EnvironmentVariable in the Module Manifest ExportedFunctions" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Get-LoadedAssembly in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Get-LoadedAssembly in the Module Manifest ExportedFunctions" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Get-ModulesWithUpdate in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Get-ModulesWithUpdate in the Module Manifest ExportedFunctions" time="0.0123" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Get-PowerShellPortable in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Get-PowerShellPortable in the Module Manifest ExportedFunctions" time="0.0217" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Get-TypeAccelerator in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Get-TypeAccelerator in the Module Manifest ExportedFunctions" time="0.021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Initialize-PSEnvironmentConfiguration in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Initialize-PSEnvironmentConfiguration in the Module Manifest ExportedFunctions" time="0.0137" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Install-CommandNotFoundUtility in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Install-CommandNotFoundUtility in the Module Manifest ExportedFunctions" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Install-OhMyPosh in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Install-OhMyPosh in the Module Manifest ExportedFunctions" time="0.0109" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Install-PowerShellISE in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Install-PowerShellISE in the Module Manifest ExportedFunctions" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Install-WinGet in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Install-WinGet in the Module Manifest ExportedFunctions" time="0.0108" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes New-Credential in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes New-Credential in the Module Manifest ExportedFunctions" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes New-ScriptFromTemplate in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes New-ScriptFromTemplate in the Module Manifest ExportedFunctions" time="0.0252" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Out-JsonFile in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Out-JsonFile in the Module Manifest ExportedFunctions" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Set-ConsoleFont in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Set-ConsoleFont in the Module Manifest ExportedFunctions" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Set-DefaultTerminal in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Set-DefaultTerminal in the Module Manifest ExportedFunctions" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Set-EnvironmentVariable in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Set-EnvironmentVariable in the Module Manifest ExportedFunctions" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Show-LoadedAssembly in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Show-LoadedAssembly in the Module Manifest ExportedFunctions" time="0.0115" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Show-WithoutEmptyProperty in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Show-WithoutEmptyProperty in the Module Manifest ExportedFunctions" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Test-IsElevated in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Test-IsElevated in the Module Manifest ExportedFunctions" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="Includes Update-AllTheThings in the Module Manifest ExportedFunctions" name="PSPreworkout.Exported Commands.Explicitly exported commands.Includes Update-AllTheThings in the Module Manifest ExportedFunctions" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="PSPreworkout.Command Help" executed="True" result="Success" success="True" time="3.1774" asserts="0" description="PSPreworkout.Command Help">
                <results>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Edit-HistoryFile" executed="True" result="Success" success="True" time="0.0906" asserts="0" description="PSPreworkout.Command Help.Edit-HistoryFile">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Edit-HistoryFile.Includes a Synopsis" time="0.0199" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Edit-HistoryFile.Includes a Description" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Edit-HistoryFile.Includes an Example" time="0.0461" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Get-Assembly" executed="True" result="Success" success="True" time="0.1382" asserts="0" description="PSPreworkout.Command Help.Get-Assembly">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Get-Assembly.Includes a Synopsis" time="0.0142" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Get-Assembly.Includes a Description" time="0.0119" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Get-Assembly.Includes an Example" time="0.0107" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Get-PSPortable" executed="True" result="Success" success="True" time="0.1834" asserts="0" description="PSPreworkout.Command Help.Get-PSPortable">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Get-PSPortable.Includes a Synopsis" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Get-PSPortable.Includes a Description" time="0.0117" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Get-PSPortable.Includes an Example" time="0.0118" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Init-PSEnvConfig" executed="True" result="Success" success="True" time="0.2464" asserts="0" description="PSPreworkout.Command Help.Init-PSEnvConfig">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Init-PSEnvConfig.Includes a Synopsis" time="0.0258" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Init-PSEnvConfig.Includes a Description" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Init-PSEnvConfig.Includes an Example" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.New-Script" executed="True" result="Success" success="True" time="0.2966" asserts="0" description="PSPreworkout.Command Help.New-Script">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.New-Script.Includes a Synopsis" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.New-Script.Includes a Description" time="0.0136" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.New-Script.Includes an Example" time="0.0136" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Show-LoadedAssemblies" executed="True" result="Success" success="True" time="0.3383" asserts="0" description="PSPreworkout.Command Help.Show-LoadedAssemblies">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Show-LoadedAssemblies.Includes a Synopsis" time="0.012" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Show-LoadedAssemblies.Includes a Description" time="0.011" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Show-LoadedAssemblies.Includes an Example" time="0.011" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Edit-PSReadLineHistoryFile" executed="True" result="Success" success="True" time="0.4589" asserts="0" description="PSPreworkout.Command Help.Edit-PSReadLineHistoryFile">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Edit-PSReadLineHistoryFile.Includes a Synopsis" time="0.049" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Edit-PSReadLineHistoryFile.Includes a Description" time="0.0332" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Edit-PSReadLineHistoryFile.Includes an Example" time="0.0322" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Edit-WingetSettingsFile" executed="True" result="Success" success="True" time="0.5612" asserts="0" description="PSPreworkout.Command Help.Edit-WingetSettingsFile">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Edit-WingetSettingsFile.Includes a Synopsis" time="0.0328" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Edit-WingetSettingsFile.Includes a Description" time="0.0321" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Edit-WingetSettingsFile.Includes an Example" time="0.0326" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Get-CommandHistory" executed="True" result="Success" success="True" time="0.662" asserts="0" description="PSPreworkout.Command Help.Get-CommandHistory">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Get-CommandHistory.Includes a Synopsis" time="0.033" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Get-CommandHistory.Includes a Description" time="0.0316" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Get-CommandHistory.Includes an Example" time="0.0317" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Get-EnvironmentVariable" executed="True" result="Success" success="True" time="0.7755" asserts="0" description="PSPreworkout.Command Help.Get-EnvironmentVariable">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Get-EnvironmentVariable.Includes a Synopsis" time="0.0336" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Get-EnvironmentVariable.Includes a Description" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Get-EnvironmentVariable.Includes an Example" time="0.033" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Get-LoadedAssembly" executed="True" result="Success" success="True" time="0.8751" asserts="0" description="PSPreworkout.Command Help.Get-LoadedAssembly">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Get-LoadedAssembly.Includes a Synopsis" time="0.0314" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Get-LoadedAssembly.Includes a Description" time="0.033" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Get-LoadedAssembly.Includes an Example" time="0.0307" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Get-ModulesWithUpdate" executed="True" result="Success" success="True" time="0.975" asserts="0" description="PSPreworkout.Command Help.Get-ModulesWithUpdate">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Get-ModulesWithUpdate.Includes a Synopsis" time="0.033" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Get-ModulesWithUpdate.Includes a Description" time="0.0313" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Get-ModulesWithUpdate.Includes an Example" time="0.0313" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Get-PowerShellPortable" executed="True" result="Success" success="True" time="1.0811" asserts="0" description="PSPreworkout.Command Help.Get-PowerShellPortable">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Get-PowerShellPortable.Includes a Synopsis" time="0.0338" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Get-PowerShellPortable.Includes a Description" time="0.0329" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Get-PowerShellPortable.Includes an Example" time="0.0351" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Get-TypeAccelerator" executed="True" result="Success" success="True" time="1.1873" asserts="0" description="PSPreworkout.Command Help.Get-TypeAccelerator">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Get-TypeAccelerator.Includes a Synopsis" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Get-TypeAccelerator.Includes a Description" time="0.0316" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Get-TypeAccelerator.Includes an Example" time="0.0314" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Initialize-PSEnvironmentConfiguration" executed="True" result="Success" success="True" time="1.2951" asserts="0" description="PSPreworkout.Command Help.Initialize-PSEnvironmentConfiguration">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Initialize-PSEnvironmentConfiguration.Includes a Synopsis" time="0.0358" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Initialize-PSEnvironmentConfiguration.Includes a Description" time="0.0334" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Initialize-PSEnvironmentConfiguration.Includes an Example" time="0.0333" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Install-CommandNotFoundUtility" executed="True" result="Success" success="True" time="1.3985" asserts="0" description="PSPreworkout.Command Help.Install-CommandNotFoundUtility">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Install-CommandNotFoundUtility.Includes a Synopsis" time="0.032" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Install-CommandNotFoundUtility.Includes a Description" time="0.032" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Install-CommandNotFoundUtility.Includes an Example" time="0.0344" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Install-OhMyPosh" executed="True" result="Success" success="True" time="1.5023" asserts="0" description="PSPreworkout.Command Help.Install-OhMyPosh">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Install-OhMyPosh.Includes a Synopsis" time="0.0334" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Install-OhMyPosh.Includes a Description" time="0.0333" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Install-OhMyPosh.Includes an Example" time="0.0326" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Install-PowerShellISE" executed="True" result="Success" success="True" time="1.601" asserts="0" description="PSPreworkout.Command Help.Install-PowerShellISE">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Install-PowerShellISE.Includes a Synopsis" time="0.033" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Install-PowerShellISE.Includes a Description" time="0.0311" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Install-PowerShellISE.Includes an Example" time="0.0306" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Install-WinGet" executed="True" result="Success" success="True" time="1.6982" asserts="0" description="PSPreworkout.Command Help.Install-WinGet">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Install-WinGet.Includes a Synopsis" time="0.0313" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Install-WinGet.Includes a Description" time="0.0303" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Install-WinGet.Includes an Example" time="0.0303" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.New-Credential" executed="True" result="Success" success="True" time="1.792" asserts="0" description="PSPreworkout.Command Help.New-Credential">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.New-Credential.Includes a Synopsis" time="0.0308" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.New-Credential.Includes a Description" time="0.0296" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.New-Credential.Includes an Example" time="0.0295" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.New-ScriptFromTemplate" executed="True" result="Success" success="True" time="1.8896" asserts="0" description="PSPreworkout.Command Help.New-ScriptFromTemplate">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.New-ScriptFromTemplate.Includes a Synopsis" time="0.0317" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.New-ScriptFromTemplate.Includes a Description" time="0.0311" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.New-ScriptFromTemplate.Includes an Example" time="0.0311" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Out-JsonFile" executed="True" result="Success" success="True" time="1.9836" asserts="0" description="PSPreworkout.Command Help.Out-JsonFile">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Out-JsonFile.Includes a Synopsis" time="0.0306" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Out-JsonFile.Includes a Description" time="0.0298" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Out-JsonFile.Includes an Example" time="0.0301" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Set-ConsoleFont" executed="True" result="Success" success="True" time="2.0785" asserts="0" description="PSPreworkout.Command Help.Set-ConsoleFont">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Set-ConsoleFont.Includes a Synopsis" time="0.0322" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Set-ConsoleFont.Includes a Description" time="0.0295" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Set-ConsoleFont.Includes an Example" time="0.0297" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Set-DefaultTerminal" executed="True" result="Success" success="True" time="2.17" asserts="0" description="PSPreworkout.Command Help.Set-DefaultTerminal">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Set-DefaultTerminal.Includes a Synopsis" time="0.0299" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Set-DefaultTerminal.Includes a Description" time="0.0291" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Set-DefaultTerminal.Includes an Example" time="0.0291" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Set-EnvironmentVariable" executed="True" result="Success" success="True" time="2.2623" asserts="0" description="PSPreworkout.Command Help.Set-EnvironmentVariable">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Set-EnvironmentVariable.Includes a Synopsis" time="0.03" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Set-EnvironmentVariable.Includes a Description" time="0.0293" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Set-EnvironmentVariable.Includes an Example" time="0.0296" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Show-LoadedAssembly" executed="True" result="Success" success="True" time="2.3594" asserts="0" description="PSPreworkout.Command Help.Show-LoadedAssembly">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Show-LoadedAssembly.Includes a Synopsis" time="0.0335" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Show-LoadedAssembly.Includes a Description" time="0.0301" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Show-LoadedAssembly.Includes an Example" time="0.0297" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Show-WithoutEmptyProperty" executed="True" result="Success" success="True" time="2.4542" asserts="0" description="PSPreworkout.Command Help.Show-WithoutEmptyProperty">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Show-WithoutEmptyProperty.Includes a Synopsis" time="0.031" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Show-WithoutEmptyProperty.Includes a Description" time="0.0293" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Show-WithoutEmptyProperty.Includes an Example" time="0.0303" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Test-IsElevated" executed="True" result="Success" success="True" time="2.5502" asserts="0" description="PSPreworkout.Command Help.Test-IsElevated">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Test-IsElevated.Includes a Synopsis" time="0.0339" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Test-IsElevated.Includes a Description" time="0.029" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Test-IsElevated.Includes an Example" time="0.0297" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="PSPreworkout.Command Help.Update-AllTheThings" executed="True" result="Success" success="True" time="2.645" asserts="0" description="PSPreworkout.Command Help.Update-AllTheThings">
                    <results>
                      <test-case description="Includes a Synopsis" name="PSPreworkout.Command Help.Update-AllTheThings.Includes a Synopsis" time="0.0303" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes a Description" name="PSPreworkout.Command Help.Update-AllTheThings.Includes a Description" time="0.0317" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Includes an Example" name="PSPreworkout.Command Help.Update-AllTheThings.Includes an Example" time="0.0291" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/home/runner/work/PSPreworkout/PSPreworkout/src/Tests/Unit/Get-EnvironmentVariable.Tests.ps1" executed="True" result="Success" success="True" time="0.0661" asserts="0" description="/home/runner/work/PSPreworkout/PSPreworkout/src/Tests/Unit/Get-EnvironmentVariable.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-EnvironmentVariable" executed="True" result="Success" success="True" time="0.0522" asserts="0" description="Get-EnvironmentVariable">
            <results>
              <test-case description="Should return the value of an existing environment variable" name="Get-EnvironmentVariable.Should return the value of an existing environment variable" time="0.049" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/home/runner/work/PSPreworkout/PSPreworkout/src/Tests/Unit/Get-LoadedAssembly.Tests.ps1" executed="True" result="Success" success="True" time="0.0559" asserts="0" description="/home/runner/work/PSPreworkout/PSPreworkout/src/Tests/Unit/Get-LoadedAssembly.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-LoadedAssembly Tests" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Get-LoadedAssembly Tests">
            <results>
              <test-suite type="TestFixture" name="Get-LoadedAssembly Tests.Function Tests" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Get-LoadedAssembly Tests.Function Tests">
                <results>
                  <test-case description="Function should exist" name="Get-LoadedAssembly Tests.Function Tests.Function should exist" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Function should have correct alias" name="Get-LoadedAssembly Tests.Function Tests.Function should have correct alias" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Function should have valid HelpUri" name="Get-LoadedAssembly Tests.Function Tests.Function should have valid HelpUri" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Function should return non-empty output" name="Get-LoadedAssembly Tests.Function Tests.Function should return non-empty output" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/home/runner/work/PSPreworkout/PSPreworkout/src/Tests/Unit/Get-PowerShellPortable.Tests.ps1" executed="True" result="Success" success="True" time="0.0474" asserts="0" description="/home/runner/work/PSPreworkout/PSPreworkout/src/Tests/Unit/Get-PowerShellPortable.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-PowerShellPortable Tests" executed="True" result="Success" success="True" time="0.031" asserts="0" description="Get-PowerShellPortable Tests">
            <results>
              <test-suite type="TestFixture" name="Get-PowerShellPortable Tests.Function Tests" executed="True" result="Success" success="True" time="0.0287" asserts="0" description="Get-PowerShellPortable Tests.Function Tests">
                <results>
                  <test-case description="Function should exist" name="Get-PowerShellPortable Tests.Function Tests.Function should exist" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Function should have valid HelpUri" name="Get-PowerShellPortable Tests.Function Tests.Function should have valid HelpUri" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Function should determine correct download URL for Windows" name="Get-PowerShellPortable Tests.Function Tests.Function should determine correct download URL for Windows" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Function should determine correct download URL for Linux" name="Get-PowerShellPortable Tests.Function Tests.Function should determine correct download URL for Linux" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Function should determine correct download URL for macOS" name="Get-PowerShellPortable Tests.Function Tests.Function should determine correct download URL for macOS" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/home/runner/work/PSPreworkout/PSPreworkout/src/Tests/Unit/Get-TypeAccelerator.Tests.ps1" executed="True" result="Success" success="True" time="0.3075" asserts="0" description="/home/runner/work/PSPreworkout/PSPreworkout/src/Tests/Unit/Get-TypeAccelerator.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-TypeAccelerator Tests" executed="True" result="Success" success="True" time="0.272" asserts="0" description="Get-TypeAccelerator Tests">
            <results>
              <test-suite type="TestFixture" name="Get-TypeAccelerator Tests.Function Tests" executed="True" result="Success" success="True" time="0.2697" asserts="0" description="Get-TypeAccelerator Tests.Function Tests">
                <results>
                  <test-case description="Function should exist" name="Get-TypeAccelerator Tests.Function Tests.Function should exist" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Function should have valid HelpUri" name="Get-TypeAccelerator Tests.Function Tests.Function should have valid HelpUri" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Function should return an object" name="Get-TypeAccelerator Tests.Function Tests.Function should return an object" time="0.2282" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Function should return non-empty output" name="Get-TypeAccelerator Tests.Function Tests.Function should return non-empty output" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Function should filter by exact name" name="Get-TypeAccelerator Tests.Function Tests.Function should filter by exact name" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Function should filter by wildcard name" name="Get-TypeAccelerator Tests.Function Tests.Function should filter by wildcard name" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/home/runner/work/PSPreworkout/PSPreworkout/src/Tests/Unit/PSPreworkout-Module.Tests.ps1" executed="True" result="Success" success="True" time="0.0906" asserts="0" description="/home/runner/work/PSPreworkout/PSPreworkout/src/Tests/Unit/PSPreworkout-Module.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Module Tests" executed="True" result="Success" success="True" time="0.0694" asserts="0" description="Module Tests">
            <results>
              <test-suite type="TestFixture" name="Module Tests.Module Tests" executed="True" result="Success" success="True" time="0.0673" asserts="0" description="Module Tests.Module Tests">
                <results>
                  <test-case description="Passes Test-ModuleManifest" name="Module Tests.Module Tests.Passes Test-ModuleManifest" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="root module PSPreworkout.psm1 should exist" name="Module Tests.Module Tests.root module PSPreworkout.psm1 should exist" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="manifest should contain PSPreworkout.psm1" name="Module Tests.Module Tests.manifest should contain PSPreworkout.psm1" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should have a matching module name in the manifest" name="Module Tests.Module Tests.should have a matching module name in the manifest" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should have a valid description in the manifest" name="Module Tests.Module Tests.should have a valid description in the manifest" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should have a valid author in the manifest" name="Module Tests.Module Tests.should have a valid author in the manifest" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should have a valid version in the manifest" name="Module Tests.Module Tests.should have a valid version in the manifest" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should have a valid guid in the manifest" name="Module Tests.Module Tests.should have a valid guid in the manifest" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should not have any spaces in the tags" name="Module Tests.Module Tests.should not have any spaces in the tags" time="0.0125" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should have a valid project Uri" name="Module Tests.Module Tests.should have a valid project Uri" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>